{
  "{\"sourceRoot\":\"C:\\\\Users\\\\ASUS\\\\hocNodeJS\\\\MEAN stack\\\\backend\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\ASUS\\\\hocNodeJS\\\\MEAN stack\\\\backend\",\"filename\":\"C:\\\\Users\\\\ASUS\\\\hocNodeJS\\\\MEAN stack\\\\backend\\\\server.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\ASUS\\\\hocNodeJS\\\\MEAN stack\\\\backend\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\ASUS\\hocNodeJS\\MEAN stack\\backend",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\ASUS\\hocNodeJS\\MEAN stack\\backend",
      "filename": "C:\\Users\\ASUS\\hocNodeJS\\MEAN stack\\backend\\server.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\ASUS\\hocNodeJS\\MEAN stack\\backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\ASUS\\hocNodeJS\\MEAN stack\\backend\\server.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\ASUS\\hocNodeJS\\MEAN stack\\backend\\server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\ASUS\\hocNodeJS\\MEAN stack\\backend",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _Issue = _interopRequireDefault(require(\"./models/Issue\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar express = require('express');\n\nvar cors = require('cors');\n\nvar bodyParser = require('body-parser');\n\nvar mongoose = require('mongoose');\n\nvar app = express();\nvar router = express.Router();\napp.use(cors());\napp.use(bodyParser());\nmongoose.connect('mongodb://localhost/issues');\nvar connection = mongoose.connection;\nconnection.once('open', function () {\n  console.log('MongoDB database connection established successfully!');\n});\napp.use('/', router); // get all issues\n\nrouter.route('/issues').get(function (req, res) {\n  _Issue[\"default\"].find(function (err, issues) {\n    if (err) console.log(err);else res.json(issues);\n  });\n}); // find issue by id\n\nrouter.route('/issues/:id').get(function (req, res) {\n  _Issue[\"default\"].findById(req.params.id, function (err, issue) {\n    if (err) console.log(err);else res.json(issue);\n  });\n}); // add issue\n\nrouter.route('/issues/add').post(function (req, res) {\n  var issue = new _Issue[\"default\"](req.body);\n  issue.save().then(function (issue) {\n    res.status(200).json({\n      'issue': 'Added successfully'\n    });\n  })[\"catch\"](function (err) {\n    res.status(400).send('Failed to create new record');\n  });\n}); // update issues\n\nrouter.route('/issues/update/:id', function (req, res) {\n  _Issue[\"default\"].findById(req.params.id, function (err, issue) {\n    if (!issue) {\n      return next(new Error('Could not load Document'));\n    } else {\n      issue.title = req.body.title;\n      issue.responsible = req.body.responsible;\n      issue.description = req.body.description;\n      issue.severity = req.body.severity;\n      issue.status = req.body.status;\n      issue.save().then(function (issue) {\n        res.status(200).json('Update done');\n      })[\"catch\"](function (err) {\n        res.status(400).send('Update failed');\n      });\n    }\n  });\n}); // delete issues \n\nrouter.route('/issues/delete/:id', function (req, res) {\n  _Issue[\"default\"].findByIdAndRemove({\n    _id: req.params.id\n  }, function (err, issue) {\n    if (err) res.json(err);else res.json('Removed successfully');\n  });\n});\napp.listen(4000, function () {\n  console.log(\"Express server running on port 4000\");\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsImNvcnMiLCJib2R5UGFyc2VyIiwibW9uZ29vc2UiLCJhcHAiLCJyb3V0ZXIiLCJSb3V0ZXIiLCJ1c2UiLCJjb25uZWN0IiwiY29ubmVjdGlvbiIsIm9uY2UiLCJjb25zb2xlIiwibG9nIiwicm91dGUiLCJnZXQiLCJyZXEiLCJyZXMiLCJJc3N1ZSIsImZpbmQiLCJlcnIiLCJpc3N1ZXMiLCJqc29uIiwiZmluZEJ5SWQiLCJwYXJhbXMiLCJpZCIsImlzc3VlIiwicG9zdCIsImJvZHkiLCJzYXZlIiwidGhlbiIsInN0YXR1cyIsInNlbmQiLCJuZXh0IiwiRXJyb3IiLCJ0aXRsZSIsInJlc3BvbnNpYmxlIiwiZGVzY3JpcHRpb24iLCJzZXZlcml0eSIsImZpbmRCeUlkQW5kUmVtb3ZlIiwiX2lkIiwibGlzdGVuIl0sIm1hcHBpbmdzIjoiOztBQUFBOzs7O0FBR0EsSUFBTUEsT0FBTyxHQUFHQyxPQUFPLENBQUMsU0FBRCxDQUF2Qjs7QUFDQSxJQUFNQyxJQUFJLEdBQUdELE9BQU8sQ0FBQyxNQUFELENBQXBCOztBQUNBLElBQU1FLFVBQVUsR0FBR0YsT0FBTyxDQUFDLGFBQUQsQ0FBMUI7O0FBQ0EsSUFBTUcsUUFBUSxHQUFHSCxPQUFPLENBQUMsVUFBRCxDQUF4Qjs7QUFFQSxJQUFNSSxHQUFHLEdBQUdMLE9BQU8sRUFBbkI7QUFDQSxJQUFNTSxNQUFNLEdBQUdOLE9BQU8sQ0FBQ08sTUFBUixFQUFmO0FBRUFGLEdBQUcsQ0FBQ0csR0FBSixDQUFRTixJQUFJLEVBQVo7QUFDQUcsR0FBRyxDQUFDRyxHQUFKLENBQVFMLFVBQVUsRUFBbEI7QUFFQUMsUUFBUSxDQUFDSyxPQUFULENBQWlCLDRCQUFqQjtBQUVBLElBQU1DLFVBQVUsR0FBR04sUUFBUSxDQUFDTSxVQUE1QjtBQUVBQSxVQUFVLENBQUNDLElBQVgsQ0FBZ0IsTUFBaEIsRUFBd0IsWUFBSztBQUN6QkMsRUFBQUEsT0FBTyxD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SkQ7QUFLSDtBQUNKLEdBakJEO0FBa0JILENBbkJELEUsQ0FxQkE7O0FBRUExQixNQUFNLENBQUNRLEtBQVAsQ0FBYSxvQkFBYixFQUFrQyxVQUFDRSxHQUFELEVBQUtDLEdBQUwsRUFBYTtBQUMzQ0Msb0JBQU1xQixpQkFBTixDQUF3QjtBQUFDQyxJQUFBQSxHQUFHLEVBQUV4QixHQUFHLENBQUNRLE1BQUosQ0FBV0M7QUFBakIsR0FBeEIsRUFBOEMsVUFBQ0wsR0FBRCxFQUFLTSxLQUFMLEVBQWU7QUFDekQsUUFBSU4sR0FBSixFQUNJSCxHQUFHLENBQUNLLElBQUosQ0FBU0YsR0FBVCxFQURKLEtBR0lILEdBQUcsQ0FBQ0ssSUFBSixDQUFTLHNCQUFUO0FBQ1AsR0FMRDtBQU1ILENBUEQ7QUFRQWpCLEdBQUcsQ0FBQ29DLE1BQUosQ0FBVyxJQUFYLEVBQWdCLFlBQUk7QUFBRTdCLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUjtBQUFtRCxDQUF6RSIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXEFTVVNcXGhvY05vZGVKU1xcTUVBTiBzdGFja1xcYmFja2VuZCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBJc3N1ZSBmcm9tICcuL21vZGVscy9Jc3N1ZSc7XHJcblxyXG5cclxuY29uc3QgZXhwcmVzcyA9IHJlcXVpcmUoJ2V4cHJlc3MnKTtcclxuY29uc3QgY29ycyA9IHJlcXVpcmUoJ2NvcnMnKTtcclxuY29uc3QgYm9keVBhcnNlciA9IHJlcXVpcmUoJ2JvZHktcGFyc2VyJyk7XHJcbmNvbnN0IG1vbmdvb3NlID0gcmVxdWlyZSgnbW9uZ29vc2UnKTtcclxuXHJcbmNvbnN0IGFwcCA9IGV4cHJlc3MoKTtcclxuY29uc3Qgcm91dGVyID0gZXhwcmVzcy5Sb3V0ZXIoKTtcclxuXHJcbmFwcC51c2UoY29ycygpKTtcclxuYXBwLnVzZShib2R5UGFyc2VyKCkpO1xyXG5cclxubW9uZ29vc2UuY29ubmVjdCgnbW9uZ29kYjovL2xvY2FsaG9zdC9pc3N1ZXMnKTtcclxuXHJcbmNvbnN0IGNvbm5lY3Rpb24gPSBtb25nb29zZS5jb25uZWN0aW9uO1xyXG5cclxuY29ubmVjdGlvbi5vbmNlKCdvcGVuJywgKCk9PiB7XHJcbiAgICBjb25zb2xlLmxvZygnTW9uZ29EQiBkYXRhYmFzZSBjb25uZWN0aW9uIGVzdGFibGlzaGVkIHN1Y2Nlc3NmdWxseSEnKTtcclxufSlcclxuXHJcbmFwcC51c2UoJy8nLHJvdXRlcik7XHJcblxyXG4vLyBnZXQgYWxsIGlzc3Vlc1xyXG5yb3V0ZXIucm91dGUoJy9pc3N1ZXMnKS5nZXQoKHJlcSxyZXMpID0+IHtcclxuICAgIElzc3VlLmZpbmQoKGVycixpc3N1ZXMpID0+IHtcclxuICAgICAgICBpZihlcnIpIFxyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhlcnIpO1xyXG4gICAgICAgIGVsc2VcclxuICAgICAgICAgICAgcmVzLmpzb24oaXNzdWVzKTtcclxuICAgIH0pXHJcbn0pXHJcblxyXG4vLyBmaW5kIGlzc3VlIGJ5IGlkXHJcbnJvdXRlci5yb3V0ZSgnL2lzc3Vlcy86aWQnKS5nZXQoKHJlcSxyZXMpID0+IHtcclxuICAgIElzc3VlLmZpbmRCeUlkKHJlcS5wYXJhbXMuaWQsKGVycixpc3N1ZSkgPT4ge1xyXG4gICAgICAgIGlmKGVycilcclxuICAgICAgICAgICAgY29uc29sZS5sb2coZXJyKTtcclxuICAgICAgICBlbHNlIFxyXG4gICAgICAgICAgICByZXMuanNvbihpc3N1ZSk7XHJcbiAgICB9KVxyXG59KVxyXG5cclxuLy8gYWRkIGlzc3VlXHJcbnJvdXRlci5yb3V0ZSgnL2lzc3Vlcy9hZGQnKS5wb3N0KChyZXEscmVzKSA9PiB7XHJcbiAgICBsZXQgaXNzdWUgPSBuZXcgSXNzdWUocmVxLmJvZHkpO1xyXG4gICAgaXNzdWUuc2F2ZSgpXHJcbiAgICAgICAgLnRoZW4oaXNzdWUgPT4ge1xyXG4gICAgICAgICAgICByZXMuc3RhdHVzKDIwMCkuanNvbih7J2lzc3VlJzogJ0FkZGVkIHN1Y2Nlc3NmdWxseSd9KTtcclxuICAgICAgICB9KVxyXG4gICAgICAgIC5jYXRjaChlcnIgPT4ge1xyXG4gICAgICAgICAgICByZXMuc3RhdHVzKDQwMCkuc2VuZCgnRmFpbGVkIHRvIGNyZWF0ZSBuZXcgcmVjb3JkJyk7XHJcbiAgICAgICAgfSlcclxufSlcclxuXHJcbi8vIHVwZGF0ZSBpc3N1ZXNcclxucm91dGVyLnJvdXRlKCcvaXNzdWVzL3VwZGF0ZS86aWQnLChyZXEscmVzKSA9PiB7XHJcbiAgICBJc3N1ZS5maW5kQnlJZChyZXEucGFyYW1zLmlkLChlcnIsaXNzdWUpID0+IHtcclxuICAgICAgICBpZighaXNzdWUpIHtcclxuICAgICAgICAgICAgcmV0dXJuIG5leHQobmV3IEVycm9yKCdDb3VsZCBub3QgbG9hZCBEb2N1bWVudCcpKVxyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgaXNzdWUudGl0bGUgPSByZXEuYm9keS50aXRsZTtcclxuICAgICAgICAgICAgaXNzdWUucmVzcG9uc2libGUgPSByZXEuYm9keS5yZXNwb25zaWJsZTtcclxuICAgICAgICAgICAgaXNzdWUuZGVzY3JpcHRpb24gPSByZXEuYm9keS5kZXNjcmlwdGlvbjtcclxuICAgICAgICAgICAgaXNzdWUuc2V2ZXJpdHkgPSByZXEuYm9keS5zZXZlcml0eTtcclxuICAgICAgICAgICAgaXNzdWUuc3RhdHVzID0gcmVxLmJvZHkuc3RhdHVzXHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICBpc3N1ZS5zYXZlKCkudGhlbihpc3N1ZSA9PiB7XHJcbiAgICAgICAgICAgICAgICByZXMuc3RhdHVzKDIwMCkuanNvbignVXBkYXRlIGRvbmUnKTtcclxuICAgICAgICAgICAgfSkuY2F0Y2goZXJyID0+IHtcclxuICAgICAgICAgICAgICAgIHJlcy5zdGF0dXMoNDAwKS5zZW5kKCdVcGRhdGUgZmFpbGVkJyk7XHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgfVxyXG4gICAgfSlcclxufSlcclxuXHJcbi8vIGRlbGV0ZSBpc3N1ZXMgXHJcblxyXG5yb3V0ZXIucm91dGUoJy9pc3N1ZXMvZGVsZXRlLzppZCcsKHJlcSxyZXMpID0+IHtcclxuICAgIElzc3VlLmZpbmRCeUlkQW5kUmVtb3ZlKHtfaWQ6IHJlcS5wYXJhbXMuaWR9LCAoZXJyLGlzc3VlKSA9PiB7XHJcbiAgICAgICAgaWYgKGVycilcclxuICAgICAgICAgICAgcmVzLmpzb24oZXJyKTtcclxuICAgICAgICBlbHNlXHJcbiAgICAgICAgICAgIHJlcy5qc29uKCdSZW1vdmVkIHN1Y2Nlc3NmdWxseScpO1xyXG4gICAgfSlcclxufSlcclxuYXBwLmxpc3Rlbig0MDAwLCgpPT57IGNvbnNvbGUubG9nKGBFeHByZXNzIHNlcnZlciBydW5uaW5nIG9uIHBvcnQgNDAwMGApfSkiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "express",
        "require",
        "cors",
        "bodyParser",
        "mongoose",
        "app",
        "router",
        "Router",
        "use",
        "connect",
        "connection",
        "once",
        "console",
        "log",
        "route",
        "get",
        "req",
        "res",
        "Issue",
        "find",
        "err",
        "issues",
        "json",
        "findById",
        "params",
        "id",
        "issue",
        "post",
        "body",
        "save",
        "then",
        "status",
        "send",
        "next",
        "Error",
        "title",
        "responsible",
        "description",
        "severity",
        "findByIdAndRemove",
        "_id",
        "listen"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\ASUS\\hocNodeJS\\MEAN stack\\backend",
      "sourcesContent": [
        "import Issue from './models/Issue';\r\n\r\n\r\nconst express = require('express');\r\nconst cors = require('cors');\r\nconst bodyParser = require('body-parser');\r\nconst mongoose = require('mongoose');\r\n\r\nconst app = express();\r\nconst router = express.Router();\r\n\r\napp.use(cors());\r\napp.use(bodyParser());\r\n\r\nmongoose.connect('mongodb://localhost/issues');\r\n\r\nconst connection = mongoose.connection;\r\n\r\nconnection.once('open', ()=> {\r\n    console.log('MongoDB database connection established successfully!');\r\n})\r\n\r\napp.use('/',router);\r\n\r\n// get all issues\r\nrouter.route('/issues').get((req,res) => {\r\n    Issue.find((err,issues) => {\r\n        if(err) \r\n            console.log(err);\r\n        else\r\n            res.json(issues);\r\n    })\r\n})\r\n\r\n// find issue by id\r\nrouter.route('/issues/:id').get((req,res) => {\r\n    Issue.findById(req.params.id,(err,issue) => {\r\n        if(err)\r\n            console.log(err);\r\n        else \r\n            res.json(issue);\r\n    })\r\n})\r\n\r\n// add issue\r\nrouter.route('/issues/add').post((req,res) => {\r\n    let issue = new Issue(req.body);\r\n    issue.save()\r\n        .then(issue => {\r\n            res.status(200).json({'issue': 'Added successfully'});\r\n        })\r\n        .catch(err => {\r\n            res.status(400).send('Failed to create new record');\r\n        })\r\n})\r\n\r\n// update issues\r\nrouter.route('/issues/update/:id',(req,res) => {\r\n    Issue.findById(req.params.id,(err,issue) => {\r\n        if(!issue) {\r\n            return next(new Error('Could not load Document'))\r\n        }\r\n        else {\r\n            issue.title = req.body.title;\r\n            issue.responsible = req.body.responsible;\r\n            issue.description = req.body.description;\r\n            issue.severity = req.body.severity;\r\n            issue.status = req.body.status\r\n            \r\n            issue.save().then(issue => {\r\n                res.status(200).json('Update done');\r\n            }).catch(err => {\r\n                res.status(400).send('Update failed');\r\n            })\r\n        }\r\n    })\r\n})\r\n\r\n// delete issues \r\n\r\nrouter.route('/issues/delete/:id',(req,res) => {\r\n    Issue.findByIdAndRemove({_id: req.params.id}, (err,issue) => {\r\n        if (err)\r\n            res.json(err);\r\n        else\r\n            res.json('Removed successfully');\r\n    })\r\n})\r\napp.listen(4000,()=>{ console.log(`Express server running on port 4000`)})"
      ]
    },
    "sourceType": "script",
    "mtime": 1562730377128
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\ASUS\\\\hocNodeJS\\\\MEAN stack\\\\backend\\\\models\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\ASUS\\\\hocNodeJS\\\\MEAN stack\\\\backend\",\"filename\":\"C:\\\\Users\\\\ASUS\\\\hocNodeJS\\\\MEAN stack\\\\backend\\\\models\\\\Issue.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\ASUS\\\\hocNodeJS\\\\MEAN stack\\\\backend\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\ASUS\\hocNodeJS\\MEAN stack\\backend\\models",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\ASUS\\hocNodeJS\\MEAN stack\\backend",
      "filename": "C:\\Users\\ASUS\\hocNodeJS\\MEAN stack\\backend\\models\\Issue.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\ASUS\\hocNodeJS\\MEAN stack\\backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\ASUS\\hocNodeJS\\MEAN stack\\backend\\models\\Issue.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\ASUS\\hocNodeJS\\MEAN stack\\backend\\models\\Issue.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\ASUS\\hocNodeJS\\MEAN stack\\backend\\models",
        "sourceFileName": "Issue.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar mongoose = require('mongoose');\n\nvar Schema = mongoose.Schema;\nvar Issue = new Schema({\n  title: {\n    type: String\n  },\n  responsible: {\n    type: String\n  },\n  description: {\n    type: String\n  },\n  severity: {\n    type: String\n  },\n  status: {\n    type: String,\n    \"default\": 'Open'\n  }\n});\n\nvar _default = mongoose.model('Issue', Issue);\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIklzc3VlLmpzIl0sIm5hbWVzIjpbIm1vbmdvb3NlIiwicmVxdWlyZSIsIlNjaGVtYSIsIklzc3VlIiwidGl0bGUiLCJ0eXBlIiwiU3RyaW5nIiwicmVzcG9uc2libGUiLCJkZXNjcmlwdGlvbiIsInNldmVyaXR5Iiwic3RhdHVzIiwibW9kZWwiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQSxJQUFNQSxRQUFRLEdBQUdDLE9BQU8sQ0FBQyxVQUFELENBQXhCOztBQUVBLElBQU1DLE1BQU0sR0FBR0YsUUFBUSxDQUFDRSxNQUF4QjtBQUdBLElBQUlDLEtBQUssR0FBRyxJQUFJRCxNQUFKLENBQVc7QUFDbkJFLEVBQUFBLEtBQUssRUFBRztBQUNKQyxJQUFBQSxJQUFJLEVBQUdDO0FBREgsR0FEVztBQUluQkMsRUFBQUEsV0FBVyxFQUFFO0FBQ1RGLElBQUFBLElBQUksRUFBRUM7QUFERyxHQUpNO0FBT25CRSxFQUFBQSxXQUFXLEVBQUU7QUFDVEgsSUFBQUEsSUFBSSxFQUFFQztBQURHLEdBUE07QUFVbkJHLEVBQUFBLFFBQVEsRUFBRTtBQUNOSixJQUFBQSxJQUFJLEVBQUVDO0FBREEsR0FWUztBQWFuQkksRUFBQUEsTUFBTSxFQUFFO0FBQ0pMLElBQUFBLElBQUksRUFBRUMsTUFERjtBQUVKLGVBQVM7QUFGTDtBQWJXLENBQVgsQ0FBWjs7ZUFtQmVOLFFBQVEsQ0FBQ1csS0FBVCxDQUFlLE9BQWYsRUFBdUJSLEtBQXZCLEMiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxBU1VTXFxob2NOb2RlSlNcXE1FQU4gc3RhY2tcXGJhY2tlbmRcXG1vZGVscyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IG1vbmdvb3NlID0gcmVxdWlyZSgnbW9uZ29vc2UnKTtcclxuXHJcbmNvbnN0IFNjaGVtYSA9IG1vbmdvb3NlLlNjaGVtYTtcclxuXHJcblxyXG5sZXQgSXNzdWUgPSBuZXcgU2NoZW1hKHtcclxuICAgIHRpdGxlIDoge1xyXG4gICAgICAgIHR5cGUgOiBTdHJpbmdcclxuICAgIH0sXHJcbiAgICByZXNwb25zaWJsZToge1xyXG4gICAgICAgIHR5cGU6IFN0cmluZyBcclxuICAgIH0sXHJcbiAgICBkZXNjcmlwdGlvbjoge1xyXG4gICAgICAgIHR5cGU6IFN0cmluZ1xyXG4gICAgfSxcclxuICAgIHNldmVyaXR5OiB7XHJcbiAgICAgICAgdHlwZTogU3RyaW5nXHJcbiAgICB9LFxyXG4gICAgc3RhdHVzOiB7XHJcbiAgICAgICAgdHlwZTogU3RyaW5nLFxyXG4gICAgICAgIGRlZmF1bHQ6ICdPcGVuJ1xyXG4gICAgfVxyXG59KVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgbW9uZ29vc2UubW9kZWwoJ0lzc3VlJyxJc3N1ZSk7XHJcblxyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "Issue.js"
      ],
      "names": [
        "mongoose",
        "require",
        "Schema",
        "Issue",
        "title",
        "type",
        "String",
        "responsible",
        "description",
        "severity",
        "status",
        "model"
      ],
      "mappings": ";;;;;;;AAAA,IAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AAEA,IAAMC,MAAM,GAAGF,QAAQ,CAACE,MAAxB;AAGA,IAAIC,KAAK,GAAG,IAAID,MAAJ,CAAW;AACnBE,EAAAA,KAAK,EAAG;AACJC,IAAAA,IAAI,EAAGC;AADH,GADW;AAInBC,EAAAA,WAAW,EAAE;AACTF,IAAAA,IAAI,EAAEC;AADG,GAJM;AAOnBE,EAAAA,WAAW,EAAE;AACTH,IAAAA,IAAI,EAAEC;AADG,GAPM;AAUnBG,EAAAA,QAAQ,EAAE;AACNJ,IAAAA,IAAI,EAAEC;AADA,GAVS;AAanBI,EAAAA,MAAM,EAAE;AACJL,IAAAA,IAAI,EAAEC,MADF;AAEJ,eAAS;AAFL;AAbW,CAAX,CAAZ;;eAmBeN,QAAQ,CAACW,KAAT,CAAe,OAAf,EAAuBR,KAAvB,C",
      "sourceRoot": "C:\\Users\\ASUS\\hocNodeJS\\MEAN stack\\backend\\models",
      "sourcesContent": [
        "const mongoose = require('mongoose');\r\n\r\nconst Schema = mongoose.Schema;\r\n\r\n\r\nlet Issue = new Schema({\r\n    title : {\r\n        type : String\r\n    },\r\n    responsible: {\r\n        type: String \r\n    },\r\n    description: {\r\n        type: String\r\n    },\r\n    severity: {\r\n        type: String\r\n    },\r\n    status: {\r\n        type: String,\r\n        default: 'Open'\r\n    }\r\n})\r\n\r\nexport default mongoose.model('Issue',Issue);\r\n\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1562730378228
  }
}